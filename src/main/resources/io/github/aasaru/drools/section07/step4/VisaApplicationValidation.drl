package io.github.aasaru.drools.section07

import io.github.aasaru.drools.domain.InvalidPassport;
import io.github.aasaru.drools.domain.InvalidVisaApplication;
import io.github.aasaru.drools.domain.Passport;
import io.github.aasaru.drools.domain.Validation;
import io.github.aasaru.drools.domain.ValidVisaApplication;
import io.github.aasaru.drools.domain.VisaApplication;

import java.time.LocalDate;

rule "Invalidate visa application with invalid passport"
  dialect "mvel"
  when
    $visaApplication: VisaApplication()
    $invalidPassport: InvalidPassport( this.passport.passportNumber == $visaApplication.passportNumber )
    not ( InvalidVisaApplication( this.visaApplication == $visaApplication ) )
  then
    System.out.println( "Set " + $visaApplication + " invalid as " + $invalidPassport.passport + " is invalid");
    insert( new InvalidVisaApplication($visaApplication) )

end

rule "Set application without validation info as passed"
  dialect "mvel"
  when
    $visaApplication: VisaApplication()
    not ( InvalidVisaApplication( this.visaApplication == $visaApplication ) )
  then
    System.out.println( $visaApplication + " is not known to be invalid, consider Valid" );
    insertLogical( new ValidVisaApplication($visaApplication) )
end

rule "Invalidate visa application where passport expires earlier than 6 months after visit end date"
  dialect "mvel"
  when
    $passport: Passport()
    $visaApplication: VisaApplication( passportNumber == $passport.passportNumber,
                                       $passport.expiresOn.isBefore(visitEndDate.plusMonths(6)) )
    not ( InvalidVisaApplication( this.visaApplication == $visaApplication ) )
  then
    System.out.println( "Set " + $visaApplication + " invalid as " + $passport + " is not valid 6 months after planned visit end date");
    insert( new InvalidVisaApplication($visaApplication) )
end