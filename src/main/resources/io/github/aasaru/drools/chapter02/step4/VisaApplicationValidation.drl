package io.github.aasaru.drools.chapter02

import io.github.aasaru.drools.chapter02.VisaApplicationValidation.Passport;
import io.github.aasaru.drools.chapter02.VisaApplicationValidation.VisaApplication;

import java.time.LocalDate;

// we have similar rule for passport, add vor visa application as well
rule "Valid visa application"
    dialect "mvel"
    when
        $visaApplication: VisaApplication( validationPassed == null )
    then
        System.out.println( "Visa application for passport " + $visaApplication.getPassportNumber() + " is without validation info, consider OK for now");
        $visaApplication.setValidationPassed(true);
end

// the rest is copy-paste from previous step


rule "Invalidate visa applications with invalid passport"
    dialect "mvel"
    when
        $passport: Passport( validationPassed == false )
        $visaApplication: VisaApplication( passportNumber == $passport.passportNumber )
    then
        System.out.println( "Set visa application invalid as passport (" + $passport.getPassportNumber() + ") hasn't passed validation");
        $visaApplication.setValidationPassed(false);
end


// passport validation rules from chapter01.step5
rule "Valid passport"
    dialect "mvel"
    when
        $passport: Passport( validationPassed == null  )
    then
        System.out.println("Passport " + $passport.getPassportNumber() + " is without validation info, consider OK for now");
        modify($passport) {
          setValidationPassed(true)
        }
end

rule "Expired passport"
    dialect "mvel"
    when
        $passport: Passport( isExpired()  )
    then
        System.out.println("Passport " + $passport.getPassportNumber() + " is INVALID because it is expired ");
        modify($passport) {
          setValidationPassed(false)
        }
end

rule "Full passport"
    dialect "mvel"
    when
        $passport: Passport( unusedVisaPages == 0   )
    then
        System.out.println("Passport " + $passport.getPassportNumber() + " is INVALID because it has no space for visa");
        modify($passport) {
          setValidationPassed(false)
        }
end

// previous rules about application from solution and step1

rule "Invalidate visa application that has planned visit start date set after planned visit end date"
    dialect "mvel"
    when
        $visaApplication: VisaApplication( visitStartDate.isAfter(visitEndDate) )
    then
        System.out.println( "Visa Application (" + $visaApplication.getPassportNumber() + ") has visit start date set after visit end date");
        $visaApplication.setValidationPassed(false);
end

rule "Invalidate visa applications that have planned visit start date in the past"
    dialect "mvel"
    when
        $visaApplication: VisaApplication( visitStartDate.isBefore(LocalDate.now()) )
    then
        System.out.println( "Visa Application (" + $visaApplication.getPassportNumber() + ") has planned visit start date is in the past");
        $visaApplication.setValidationPassed(false);
end

rule "Passport is valid at least 6 months after visit end date"
    dialect "mvel"
    when
        $passport: Passport()
        $visaApplication: VisaApplication( passportNumber == $passport.passportNumber, $passport.expiresOn.isBefore(visitEndDate.plusMonths(6)) )
    then
        System.out.println( "Passport " + $passport.getPassportNumber() + " is not valid 6 months after planned visit end date");
        $visaApplication.setValidationPassed(false);

end